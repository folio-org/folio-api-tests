{
	"info": {
		"name": "okapi-version-env-invoke",
		"_postman_id": "a8e7d635-949f-4040-b70f-158604dfbcb7",
		"description": "Test endpoints: version, env, and invoke.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "version",
			"description": null,
			"item": [
				{
					"name": "/_/version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a43e301d-b3b3-4701-831d-4b62b4ef5f08",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"/_/version GET OK\", function () {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.be.withBody;",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/version",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"version"
							]
						},
						"description": "This request checks OKAPI version"
					},
					"response": []
				}
			]
		},
		{
			"name": "env",
			"description": null,
			"item": [
				{
					"name": "/authn/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b86e9e9-ea76-40b4-a0e2-cee94ee2417a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.variables.set(\"xokapitoken\", postman.getResponseHeader(\"x-okapi-token\"));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"{{username}}\",\"password\":\"{{password}}\"}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/login",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"authn",
								"login"
							]
						},
						"description": "This is to set okapi-token header to be used by later tests."
					},
					"response": []
				},
				{
					"name": "EnvEntry.json",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d5befdf-ab38-47e4-8836-1a1321aebc8a",
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.variables.get(\"schema_item\") + \" GET OK\", function () {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.be.withBody;",
									"});",
									"",
									"pm.variables.set(\"schema_item_content\", responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{schema_loc}}/{{mod_name}}/{{mod_version}}/okapi-core/src/main/raml/{{schema_item}}",
							"host": [
								"{{schema_loc}}"
							],
							"path": [
								"{{mod_name}}",
								"{{mod_version}}",
								"okapi-core",
								"src",
								"main",
								"raml",
								"{{schema_item}}"
							]
						},
						"description": "This is to get EnvEntry.json to be used in later tests."
					},
					"response": []
				},
				{
					"name": "EnvEntryList.json",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a23ce7c-8af2-4254-bdf0-fb4caf0d5cda",
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.variables.get(\"schema_items\") + \" GET OK\", function () {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.be.withBody;",
									"});",
									"",
									"pm.variables.set(\"schema_items_content\", responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{schema_loc}}/{{mod_name}}/{{mod_version}}/okapi-core/src/main/raml/{{schema_items}}",
							"host": [
								"{{schema_loc}}"
							],
							"path": [
								"{{mod_name}}",
								"{{mod_version}}",
								"okapi-core",
								"src",
								"main",
								"raml",
								"{{schema_items}}"
							]
						},
						"description": "This is to get EnvEntryList.json to be used in later tests."
					},
					"response": []
				},
				{
					"name": "/_/env",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7fc7e253-a51c-4140-977f-6af2574bd67b",
								"type": "text/javascript",
								"exec": [
									"const jsonData = JSON.parse(responseBody);",
									"const env_name = pm.variables.get(\"env_test_name\");",
									"const env_value = pm.variables.get(\"env_test_value\");",
									"",
									"pm.test(\"/_/env POST OK\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.expect(jsonData.name).to.eql(env_name);",
									"    pm.expect(jsonData.value).to.eql(env_value);",
									"});",
									"",
									"pm.test('Schema is valid', function() {",
									"    pm.expect(tv4.validate(jsonData, JSON.parse(pm.variables.get(\"schema_item_content\")))).to.be.true;",
									"});",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "288d5608-400b-4caf-a57e-fc89bdb12cca",
								"type": "text/javascript",
								"exec": [
									"pm.variables.set(\"env_test_name\", + new Date() + \"\");",
									"pm.variables.set(\"env_test_value\", \"\" + Math.floor(Math.random() * 1000));"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{env_test_name}}\",\n  \"value\": \"{{env_test_value}}\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/env",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"env"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "/_/env Invalid/Extra fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb9d3906-9532-4409-86b2-ff3dc57c2bde",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"/_/env POST NOT OK: incorrect/extra fields\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7442d213-e5bf-4e40-a2fd-cf2c3c4d14bc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{env_test_name}}\",\n  \"value2\": \"{{env_test_value}}\"\n  \"value3\": \"{{env_test_value}}\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/env",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"env"
							]
						},
						"description": "This is to test the negative case where incorrect/extra fields exist in the payload."
					},
					"response": []
				},
				{
					"name": "/_/env Malformed JSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c4cacc1-ea9b-423b-8642-6aefd0e43c65",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"/_/env POST NOT OK: bad-formed JSON\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7442d213-e5bf-4e40-a2fd-cf2c3c4d14bc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"name\": \"{{env_test_name}}\", \"value\": \"{{env_test_value}}\"\n"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/env",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"env"
							]
						},
						"description": "This is to test the negative case where the payload is not well-formed JSON."
					},
					"response": []
				},
				{
					"name": "/_/env",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "723d2445-b7ae-4ef7-b48b-be94177cc7cd",
								"type": "text/javascript",
								"exec": [
									"const jsonData = JSON.parse(responseBody);",
									"",
									"pm.test(\"/_/env GET OK\", function () {",
									"    pm.response.to.be.ok;",
									"    pm.expect(jsonData).to.deep.include({",
									"        name: pm.variables.get(\"env_test_name\"), ",
									"        value: pm.variables.get(\"env_test_value\")",
									"    });",
									"});",
									"",
									"pm.test('Schema is valid', function() {",
									"    tv4.addSchema(pm.variables.get(\"schema_item\"), JSON.parse(pm.variables.get(\"schema_item_content\")));",
									"    pm.expect(tv4.validate(jsonData, JSON.parse(pm.variables.get(\"schema_items_content\")))).to.be.true;",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/env",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"env"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "/_/env/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0e4fc25-9804-45b7-bc7c-7c8b91ee39cd",
								"type": "text/javascript",
								"exec": [
									"const jsonData = JSON.parse(responseBody);",
									"",
									"pm.test(\"/_/env/{id} GET OK\", function () {",
									"    pm.response.to.be.ok;",
									"    pm.expect(jsonData.name).to.eql(pm.variables.get(\"env_test_name\"));",
									"    pm.expect(jsonData.value).to.eql(pm.variables.get(\"env_test_value\"));",
									"});",
									"",
									"pm.test('Schema is valid', function() {",
									"    pm.expect(tv4.validate(jsonData, JSON.parse(pm.variables.get(\"schema_item_content\")))).to.be.true;",
									"});",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "82561637-b77b-49be-a76d-d381dbe94546",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/env/{{env_test_name}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"env",
								"{{env_test_name}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "/_/env Missing field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2aaeab35-41c7-4567-ad33-729f6aa796a4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"/_/env POST NOT OK: missing required field\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7442d213-e5bf-4e40-a2fd-cf2c3c4d14bc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"value\": \"{{env_test_value}}\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/env",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"env"
							]
						},
						"description": "This is to test the negative case where required field \"name\" is missing in the payload."
					},
					"response": []
				},
				{
					"name": "/_/env/{id} Non-existing id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfc5217f-96aa-4f5a-8be3-70fc1f895f03",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"/_/env/{id} GET NOT OK: non-existing id\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ef60140f-edda-4bb5-8b09-eb24f7870bae",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/env/{{$guid}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"env",
								"{{$guid}}"
							]
						},
						"description": "This is to test the Negative case where id does not exist."
					},
					"response": []
				},
				{
					"name": "/_/env/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7474f7d-17e6-4048-8d38-1e6b885cb1d4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"/_/env/{id} DELETE OK\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5bfe09f8-a801-4d2d-98f5-4853b3798402",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/env/{{env_test_name}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"env",
								"{{env_test_name}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "/_/env/{id} Non-existing id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9ccc111-4ed2-4b1a-9c68-31aa6d331940",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"/_/env/{id} DELETE NOT OK: non-existing id\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ef60140f-edda-4bb5-8b09-eb24f7870bae",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/env/{{$guid}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"env",
								"{{$guid}}"
							]
						},
						"description": "This is to test the Negative case where id does not exist."
					},
					"response": []
				}
			]
		},
		{
			"name": "invoke",
			"description": null,
			"item": [
				{
					"name": "/authn/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b86e9e9-ea76-40b4-a0e2-cee94ee2417a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.variables.set(\"xokapitoken\", postman.getResponseHeader(\"x-okapi-token\"));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"{{username}}\",\"password\":\"{{password}}\"}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/login",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"authn",
								"login"
							]
						},
						"description": "This is to set okapi-token header to be used by later tests."
					},
					"response": []
				},
				{
					"name": "/_/invoke/tenant/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23278065-4507-47b3-867c-1b3da3fad791",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"/_/invoke/tenant/{id} GET OK\", function () {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.be.withBody;",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/invoke/tenant/{{xokapitenant}}/groups",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"invoke",
								"tenant",
								"{{xokapitenant}}",
								"groups"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "/_/invoke/tenant/{id} Non-existing tenant",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96f0a438-ab3e-4fdb-a222-3adc7ee90e06",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"/_/invoke/tenant/{id} GET NOT OK: non-existing tenant\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/invoke/tenant/{{$guid}}/groups",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"invoke",
								"tenant",
								"{{$guid}}",
								"groups"
							]
						},
						"description": "This is to test the negative case where id does not exist."
					},
					"response": []
				},
				{
					"name": "/_/invoke/tenant/{id} Non-existing service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "434bcf6b-ec41-4f16-b663-4e95cd66337c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"/_/invoke/tenant/{id} GET NOT OK: non-existing service\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/invoke/tenant/{{xokapitenant}}/{{$guid}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"invoke",
								"tenant",
								"{{xokapitenant}}",
								"{{$guid}}"
							]
						},
						"description": "This is to test the negative case where service does not exist."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f7463ae5-2c8e-462c-b8da-319cf59e011b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "3cd1b95c-ad30-49b0-9bb1-84211ed68777",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "184d1919-0aca-4f53-96b8-7a0c1677d5e6",
			"key": "mod_name",
			"value": "okapi",
			"type": "text",
			"description": ""
		},
		{
			"id": "d4ff03c2-66a2-4386-9c58-ef1f0d3164f5",
			"key": "mod_version",
			"value": "v2.10.0",
			"type": "text",
			"description": ""
		},
		{
			"id": "e418280c-15b2-4739-8238-25a5fabe3563",
			"key": "schema_item",
			"value": "EnvEntry.json",
			"type": "text",
			"description": ""
		},
		{
			"id": "462b9246-23d3-4f02-9ef3-77ed4eb7ae02",
			"key": "schema_items",
			"value": "EnvEntryList.json",
			"type": "text",
			"description": ""
		},
		{
			"id": "cbc30aa8-03e0-428b-a2f1-24401e599485",
			"key": "schema_loc",
			"value": "https://raw.githubusercontent.com/folio-org",
			"type": "text",
			"description": ""
		}
	]
}

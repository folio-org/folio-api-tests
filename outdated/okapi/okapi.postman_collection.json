{
	"info": {
		"name": "okapi-proxy",
		"_postman_id": "38126513-3af3-210d-cd19-5d8556f78988",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "supertenant",
			"description": "",
			"item": [
				{
					"name": "authn/login-supertenant",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d51fb42f-a247-4732-8d90-1e5419578fc1",
								"type": "text/javascript",
								"exec": [
									"//check if suppertenant enabled",
									"if(pm.response.headers.has(\"x-okapi-token\")) {",
									"",
									"    pm.environment.set(\"xokapitoken\", pm.response.headers.get(\"x-okapi-token\"));",
									"    pm.environment.set(\"xokapitenant\", \"supertenant\");",
									"",
									"}",
									"else {",
									"  pm.environment.set(\"xokapitoken\", \"\");",
									"  pm.environment.set(\"xokapitenant\", \"supertenant\");  ",
									"}",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"value": "supertenant"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"admin\",\"password\":\"$ecrecy8egetsTyranny\"}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/login",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"authn",
								"login"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "modules",
			"description": "",
			"item": [
				{
					"name": "_/proxy/modules",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1055b7d7-8f48-480a-b785-586a58dc4ffd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok; ",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; ",
									"});",
									"",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"title\": \"DeploymentDescriptorList\",",
									"  \"type\": \"array\",",
									"  \"items\": {",
									"    \"$ref\": \"DeploymentDescriptor.json\"",
									"  }",
									"};",
									"",
									"var data1 = JSON.parse(responseBody);",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(data1, schema)).to.be.true;",
									"});",
									"",
									"pm.test(\"X-Okapi-Trace header has expected value\", function () {",
									"    pm.expect(pm.response.headers.get(\"X-Okapi-Trace\")).to.contain(\"/_/proxy/modules : 200\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/modules",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"modules"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "_/proxy/modules",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e8f2eab-8284-40cb-a426-04c8d81a67a0",
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"newmoduleid\", response.id);",
									"",
									"pm.test(\"Status is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; ",
									"});",
									"",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"title\": \"ModuleDescriptor\",",
									"  \"description\": \"A Folio Module\",",
									"  \"type\": \"object\",",
									"  \"additionalProperties\" : false,",
									"  \"properties\": {",
									"    \"id\": {\"type\": \"string\"},",
									"    \"name\": {\"type\": \"string\"},",
									"    \"tags\" : {\"type\" : [\"array\", \"null\"],",
									"      \"items\" : {\"type\": \"string\"}",
									"    },",
									"    \"requires\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"InterfaceReference.json\"",
									"      }",
									"    },",
									"    \"provides\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"InterfaceDescriptor.json\"",
									"      }",
									"    },",
									"    \"filters\": {",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$ref\": \"RoutingEntry.json\"",
									"      }",
									"    },",
									"    \"permissionSets\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"Permission.json\"",
									"      }",
									"    },",
									"    \"uiDescriptor\": {",
									"      \"$ref\": \"UiModuleDescriptor.json\"",
									"    },",
									"    \"launchDescriptor\": {",
									"      \"$ref\": \"LaunchDescriptor.json\"",
									"    }",
									"  },",
									"  \"required\": [\"id\", \"name\"]",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(response, schema)).to.be.true;",
									"});",
									"",
									"pm.test(\"X-Okapi-Trace header has expected value\", function () {",
									"    pm.expect(pm.response.headers.get(\"X-Okapi-Trace\")).to.contain(\"/_/proxy/modules : 201\");",
									"});",
									"",
									"pm.test(\"Location header is present \", function () {",
									"    pm.response.to.have.header(\"Location\");",
									"});",
									"",
									"pm.test(\"Location header has expected value\", function () {",
									"    pm.expect(pm.response.headers.get(\"Location\")).to.equal(\"/_/proxy/modules/test-basic-1.0.0\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"test-basic-1.0.0\",\r\n  \"name\": \"Okapi test module\",\r\n  \"provides\": [\r\n    {\r\n      \"id\": \"test-basic\",\r\n      \"version\": \"2.2\",\r\n      \"handlers\": [\r\n        {\r\n          \"methods\": [ \"GET\", \"POST\" ],\r\n          \"pathPattern\": \"/testb\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"requires\": [],\r\n  \"launchDescriptor\": {\r\n    \"exec\": \"java -Dport=%p -jar okapi-test-module/target/okapi-test-module-fat.jar\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/modules",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"modules"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "_/proxy/modules/{{newmoduleid}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08667400-44ca-40ee-beb5-d9ad3b9cbe4a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok; ",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; ",
									"});",
									"",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"title\": \"ModuleDescriptor\",",
									"  \"description\": \"A Folio Module\",",
									"  \"type\": \"object\",",
									"  \"additionalProperties\" : false,",
									"  \"properties\": {",
									"    \"id\": {\"type\": \"string\"},",
									"    \"name\": {\"type\": \"string\"},",
									"    \"tags\" : {\"type\" : [\"array\", \"null\"],",
									"      \"items\" : {\"type\": \"string\"}",
									"    },",
									"    \"requires\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"InterfaceReference.json\"",
									"      }",
									"    },",
									"    \"provides\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"InterfaceDescriptor.json\"",
									"      }",
									"    },",
									"    \"filters\": {",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$ref\": \"RoutingEntry.json\"",
									"      }",
									"    },",
									"    \"permissionSets\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"Permission.json\"",
									"      }",
									"    },",
									"    \"uiDescriptor\": {",
									"      \"$ref\": \"UiModuleDescriptor.json\"",
									"    },",
									"    \"launchDescriptor\": {",
									"      \"$ref\": \"LaunchDescriptor.json\"",
									"    }",
									"  },",
									"  \"required\": [\"id\", \"name\"]",
									"};",
									"",
									"var data1 = JSON.parse(responseBody);",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(data1, schema)).to.be.true;",
									"});",
									"",
									"pm.test(\"X-Okapi-Trace header has expected value\", function () {",
									"    pm.expect(pm.response.headers.get(\"X-Okapi-Trace\")).to.contain(\"/proxy/modules/test-basic-1.0.0 : 200\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/modules/{{newmoduleid}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"modules",
								"{{newmoduleid}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "_/proxy/modules",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "573ae761-aff9-46c2-86f9-e80a3d7b8fec",
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; ",
									"});",
									"",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"title\": \"ModuleDescriptor\",",
									"  \"description\": \"A Folio Module\",",
									"  \"type\": \"object\",",
									"  \"additionalProperties\" : false,",
									"  \"properties\": {",
									"    \"id\": {\"type\": \"string\"},",
									"    \"name\": {\"type\": \"string\"},",
									"    \"tags\" : {\"type\" : [\"array\", \"null\"],",
									"      \"items\" : {\"type\": \"string\"}",
									"    },",
									"    \"requires\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"InterfaceReference.json\"",
									"      }",
									"    },",
									"    \"provides\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"InterfaceDescriptor.json\"",
									"      }",
									"    },",
									"    \"filters\": {",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$ref\": \"RoutingEntry.json\"",
									"      }",
									"    },",
									"    \"permissionSets\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"Permission.json\"",
									"      }",
									"    },",
									"    \"uiDescriptor\": {",
									"      \"$ref\": \"UiModuleDescriptor.json\"",
									"    },",
									"    \"launchDescriptor\": {",
									"      \"$ref\": \"LaunchDescriptor.json\"",
									"    }",
									"  },",
									"  \"required\": [\"id\", \"name\"]",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(response, schema)).to.be.true;",
									"});",
									"",
									"pm.test(\"X-Okapi-Trace header has expected value\", function () {",
									"    pm.expect(pm.response.headers.get(\"X-Okapi-Trace\")).to.contain(\"/_/proxy/modules/test-basic-1.0.0\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{newmoduleid}}\",\r\n  \"name\": \"Okapi api test module\",\r\n  \"provides\": [\r\n    {\r\n      \"id\": \"test-basic\",\r\n      \"version\": \"2.3\",\r\n      \"handlers\": [\r\n        {\r\n          \"methods\": [ \"GET\", \"POST\", \"DELETE\" ],\r\n          \"pathPattern\": \"/testb\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"requires\": [],\r\n  \"launchDescriptor\": {\r\n    \"exec\": \"java -Dport=%p -jar okapi-test-module/target/okapi-test-module-fat.jar\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/modules/{{newmoduleid}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"modules",
								"{{newmoduleid}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "_/proxy/modules/{{newmoduleid}}  - updated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08667400-44ca-40ee-beb5-d9ad3b9cbe4a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok; ",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; ",
									"});",
									"",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"title\": \"ModuleDescriptor\",",
									"  \"description\": \"A Folio Module\",",
									"  \"type\": \"object\",",
									"  \"additionalProperties\" : false,",
									"  \"properties\": {",
									"    \"id\": {\"type\": \"string\"},",
									"    \"name\": {\"type\": \"string\"},",
									"    \"tags\" : {\"type\" : [\"array\", \"null\"],",
									"      \"items\" : {\"type\": \"string\"}",
									"    },",
									"    \"requires\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"InterfaceReference.json\"",
									"      }",
									"    },",
									"    \"provides\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"InterfaceDescriptor.json\"",
									"      }",
									"    },",
									"    \"filters\": {",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$ref\": \"RoutingEntry.json\"",
									"      }",
									"    },",
									"    \"permissionSets\": {",
									"      \"type\": [\"array\", \"null\"],",
									"      \"items\": {",
									"        \"$ref\": \"Permission.json\"",
									"      }",
									"    },",
									"    \"uiDescriptor\": {",
									"      \"$ref\": \"UiModuleDescriptor.json\"",
									"    },",
									"    \"launchDescriptor\": {",
									"      \"$ref\": \"LaunchDescriptor.json\"",
									"    }",
									"  },",
									"  \"required\": [\"id\", \"name\"]",
									"};",
									"",
									"var data1 = JSON.parse(responseBody);",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(data1, schema)).to.be.true;",
									"});",
									"",
									"pm.test(\"X-Okapi-Trace header has expected value\", function () {",
									"    pm.expect(pm.response.headers.get(\"X-Okapi-Trace\")).to.contain(\"/proxy/modules/test-basic-1.0.0 : 200\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/modules/{{newmoduleid}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"modules",
								"{{newmoduleid}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "_/proxy/modules/{{newmoduleid}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f33d3753-691e-4db8-942b-aa846e7202f5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"",
									"pm.test(\"X-Okapi-Trace header has expected value\", function () {",
									"    pm.expect(pm.response.headers.get(\"X-Okapi-Trace\")).to.contain('/proxy/modules/test-basic-1.0.0 : 204');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/modules/{{newmoduleid}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"modules",
								"{{newmoduleid}}"
							]
						},
						"description": null
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bd57656c-5198-4c39-b96f-e0186ff986f9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cf56f0c5-ba81-43d4-b23f-ea265529da8a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"'X-Okapi-Trace' header is present \", function () {",
							"    pm.response.to.have.header(\"X-Okapi-Trace\");",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "module - negative tests",
			"description": "",
			"item": [
				{
					"name": "_/proxy/modules - malformed json",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32c8a5a0-0dc5-4591-abec-d43757155c0f",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.withBody;",
									"  ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"test-basic-1.0.0\",\r\n  \"name\": \"Okapi test module\",\r\n  \"provides\": [\r\n    {\r\n      \"id\": \"test-basic\",\r\n      \"version\": \"2.2\",\r\n      \"handlers\": [\r\n        {\r\n          \"methods\": [ \"GET\", \"POST\" ],\r\n          \"pathPattern\": \"/testb\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"requires\": [],\r\n  \"launchDescriptor\": {\r\n    \"exec\": \"java -Dport=%p -jar okapi-test-module/target/okapi-test-module-fat.jar\"\r\n  }\r\n"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/modules",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"modules"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "_/proxy/modules -- missing semantic version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9392e615-75de-4475-8b94-9f09957c834b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.withBody;",
									"    ",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing semantic version\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"test-basic\",\r\n  \"name\": \"Okapi test module\",\r\n  \"provides\": [\r\n    {\r\n      \"id\": \"test-basic\",\r\n      \"version\": \"2.2\",\r\n      \"handlers\": [\r\n        {\r\n          \"methods\": [ \"GET\", \"POST\" ],\r\n          \"pathPattern\": \"/testb\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"requires\": [],\r\n  \"launchDescriptor\": {\r\n    \"exec\": \"java -Dport=%p -jar okapi-test-module/target/okapi-test-module-fat.jar\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/modules",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"modules"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "_/proxy/modules -- missing id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31fe48bb-ac7b-48cb-ac5d-ef7b52aefb42",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.withBody;",
									"    ",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id is missing for module\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"misio\"\r\n }"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/modules",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"modules"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "_/proxy/modules -- delete nonexisting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79a91dbd-f7b1-4dc4-8db5-eae22590471f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/modules/foo",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"modules",
								"foo"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "interfaces",
			"description": "",
			"item": [
				{
					"name": "/interfaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/interfaces",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"interfaces"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "tenants",
			"description": "",
			"item": []
		},
		{
			"name": "health",
			"description": "",
			"item": [
				{
					"name": "_/proxy/health",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba812cb6-1e2f-415c-83c6-599a53400886",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok; ",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; ",
									"});",
									"",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"title\": \"HealthStatusList\",",
									"  \"type\": \"array\",",
									"  \"items\": {",
									"    \"title\": \"HealthStatus\",",
									"    \"type\": \"object\",",
									"    \"additionalProperties\" : false,",
									"    \"properties\": {",
									"         \"id\": {\"type\": \"string\"},",
									"         \"status\": {\"type\": \"string\"}",
									"     },",
									"  \"required\": [\"id\", \"status\"]",
									"    }",
									"};",
									"",
									"var data1 = JSON.parse(responseBody);",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(data1, schema)).to.be.true;",
									"});",
									"",
									"//check trace header",
									"",
									"pm.test(\"X-Okapi-Trace header has expected value\", function () {",
									"    pm.expect(pm.response.headers.get(\"X-Okapi-Trace\")).to.contain(\"/_/proxy/health : 200\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/health",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"health"
							]
						},
						"description": ""
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "da90a5e7-a301-4199-8668-6976be8c9022",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a2465aac-c9f4-44b5-b2e5-91247b1cdb9a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"'X-Okapi-Trace' header is present \", function () {",
							"    pm.response.to.have.header(\"X-Okapi-Trace\");",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "pull/modules",
			"description": "",
			"item": [
				{
					"name": "/pull/modules - no url provided",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3a4cc43-7dde-4a4b-a37a-7e083a0b0530",
								"type": "text/javascript",
								"exec": [
									"// pm.test(\"Status is 404\", function () {",
									"//     pm.response.to.have.status(404);",
									"// });",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.withBody;",
									" ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"urls\": []}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/pull/modules",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"_",
								"proxy",
								"pull",
								"modules"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e6973dce-08ad-44bc-86cd-5c42e0e1afc3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0dc60a59-7e8e-46a9-a5ef-178a87af728e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}

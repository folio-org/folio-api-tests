{
	"info": {
		"_postman_id": "8edcc69e-daae-4372-b6e9-7b93e3e6a5a7",
		"name": "mod-data-export",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test setup",
			"item": [
				{
					"name": "Create tenant and enable modules",
					"item": [
						{
							"name": "Login by existing admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "42a1a311-faa2-4c41-94c3-34a538f27bc6",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.environment.set(\"xokapitoken-admin\", postman.getResponseHeader(\"x-okapi-token\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e262078c-6a7d-4ef0-a9cd-ba5e74bec52a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-okapi-tenant",
										"value": "{{xokapitenant}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \r\n   \"username\":\"{{username}}\",\r\n   \"password\":\"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/login",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"authn",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new tenant",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "79228ab4-80ee-4341-b169-a45f8fa5bc55",
										"exec": [
											"pm.test(\"Preparing request to create test tenant. Tenant creation might take up to 1 minute...\", () => {",
											"    pm.variables.set(\"tenantData\", JSON.stringify(globals.testData.tenant));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4399907a-0a31-4821-a69d-0f6f060e082c",
										"exec": [
											"// In case the tenant was not created no sense to run further requests\r",
											"postman.setNextRequest(null);\r",
											"\r",
											"pm.test(\"Tenant created - created (201) or already exists (400 with Duplicate tenant id error)\", () => {\r",
											"    pm.expect(pm.response.code).be.oneOf([201, 400]);\r",
											"    if (pm.response.code === 400) {\r",
											"        pm.expect(pm.response.text()).to.include(\"Duplicate tenant id\");\r",
											"        purgeModulesData();\r",
											"    } else {\r",
											"        // All is okay, running further requests\r",
											"        postman.setNextRequest();\r",
											"    }\r",
											"});\r",
											"\r",
											"function purgeModulesData() {\r",
											"    let utils = eval(globals.loadUtils);\r",
											"    let tenantBaseUrl = utils.buildOkapiURL(\"/_/proxy/tenants/\" + pm.variables.get(\"testTenant\"));\r",
											"    pm.sendRequest(tenantBaseUrl + \"/modules\", (err, res) => {\r",
											"        let modulesToDisable = null;\r",
											"        pm.test(\"Preparing request to disable modules if any installed before...\", () => {\r",
											"            pm.expect(err).to.equal(null);\r",
											"            pm.expect(res.code).to.equal(200);\r",
											"\r",
											"            modulesToDisable = res.json();\r",
											"            modulesToDisable.forEach(entry => entry.action = \"disable\");\r",
											"            console.log(modulesToDisable);\r",
											"        });\r",
											"\r",
											"        if (modulesToDisable !== null) {\r",
											"            // In case the response indicates that there are some modules are already installed, their data have to be purged first\r",
											"            if (modulesToDisable.length > 0) {\r",
											"                pm.sendRequest({\r",
											"                    url: tenantBaseUrl + \"/install\",\r",
											"                    method: \"POST\",\r",
											"                    header: {\r",
											"                        \"X-Okapi-Token\": pm.environment.get(\"xokapitoken-admin\"),\r",
											"                        \"Content-type\": \"application/json\"\r",
											"                    },\r",
											"                    body: JSON.stringify(modulesToDisable)\r",
											"                }, (error, response) => {\r",
											"                    pm.test(\"Purging the data for '\" + pm.variables.get(\"testTenant\") + \"' tenant\", () => {\r",
											"                        pm.expect(error).to.equal(null);\r",
											"                        pm.expect(response).to.be.ok;\r",
											"                        // All the data have been purged. Now wait for a minute and run next request\r",
											"                        setTimeout(() => postman.setNextRequest(), 61000);\r",
											"                        postman.setNextRequest();\r",
											"                    });\r",
											"                });\r",
											"            } else {\r",
											"                pm.test(\"No modules to purge for '\" + pm.variables.get(\"testTenant\") + \"' tenant\", () => {\r",
											"                    // Run next request\r",
											"                    postman.setNextRequest();\r",
											"                });\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-okapi-token",
										"value": "{{xokapitoken-admin}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{tenantData}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/tenants",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"_",
										"proxy",
										"tenants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable modules for new tenant",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "adb8849e-aba2-41a9-9fc1-cef7b180750d",
										"exec": [
											"let utils = eval(globals.loadUtils);\r",
											"\r",
											"utils.getModuleId(\"mod-data-export\", bodyHandler);\r",
											"utils.getModuleId(\"mod-login\", bodyHandler);\r",
											"utils.getModuleId(\"mod-permissions\", bodyHandler);\r",
											"utils.getModuleId(\"mod-inventory-storage\", bodyHandler);\r",
											"\r",
											"var modulesToEnable = [];\r",
											"\r",
											"function bodyHandler(moduleId) {\r",
											"    modulesToEnable.push({\r",
											"        \"id\": moduleId,\r",
											"        \"action\": \"enable\"\r",
											"    });\r",
											"    pm.variables.set(\"modulesToEnable\", JSON.stringify(modulesToEnable));\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ea46d32c-03fa-4a58-b16e-2eb55ad1710a",
										"exec": [
											"let utils = eval(globals.loadUtils);\r",
											"\r",
											"postman.setNextRequest(null);\r",
											"pm.test(\"Enabled required modules\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.withBody;\r",
											"    postman.setNextRequest();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"type": "text",
										"value": "{{xokapitoken-admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{modulesToEnable}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/tenants/{{testTenant}}/install",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"_",
										"proxy",
										"tenants",
										"{{testTenant}}",
										"install"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create admin user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c45ee45a-9ca4-45c2-9e25-825b7c3da78c",
										"exec": [
											"pm.variables.set(\"userData\", JSON.stringify(globals.testData.users.admin.user));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "85f83578-1c9b-462c-a390-fc1fd5bdd6ec",
										"exec": [
											"// In case the user was not created no sense to run further requests",
											"postman.setNextRequest(null);",
											"",
											"pm.test(\"User created - Expected Created (201)\", () => {",
											"    pm.response.to.have.status(201);",
											"",
											"    // All is okay so running further requests",
											"    postman.setNextRequest();",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-tenant",
										"type": "text",
										"value": "{{testTenant}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{userData}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/users",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credentials for admin user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c7a162b-9716-4666-b83e-df0d3dc7e3db",
										"exec": [
											"pm.test(globals.testData.users.admin.user.username + \" user's credentials created\", () => pm.response.to.have.status(201));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4bf30ac7-39cb-4950-a9b9-b61003fe43ac",
										"exec": [
											"pm.variables.set(\"userCreds\", JSON.stringify(globals.testData.users.admin.credentials));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-tenant",
										"type": "text",
										"value": "{{testTenant}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{userCreds}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/credentials",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"authn",
										"credentials"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add all permissions to admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e9cd5a9-4e61-49fc-b276-a7ce022c4f82",
										"exec": [
											"pm.test(globals.testData.users.admin.user.username + \" user's permissions created\", () => pm.response.to.have.status(201));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2fbdff76-3da0-4e4b-b362-ed3a3b001f73",
										"exec": [
											"let utils = eval(globals.loadUtils);\r",
											"let pmRq = {\r",
											"    url: utils.buildOkapiURL('/perms/permissions?length=1000&query=(subPermissions=\"\" NOT subPermissions ==/respectAccents []) and (cql.allRecords=1 NOT childOf <>/respectAccents [])'),\r",
											"    method: \"GET\",\r",
											"    header: {\r",
											"        \"X-Okapi-Tenant\": pm.variables.get(\"testTenant\")\r",
											"    }\r",
											"};\r",
											"pm.sendRequest(pmRq, (err, res) => {\r",
											"    let userPermissions = globals.testData.users.admin.permissions;\r",
											"    userPermissions.permissions = res.json().permissions.map(perm => perm.permissionName);\r",
											"    pm.variables.set(\"userPermissions\", JSON.stringify(userPermissions));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-okapi-tenant",
										"type": "text",
										"value": "{{testTenant}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{userPermissions}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/perms/users",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"perms",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable mod-authtoken for new tenant",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e602f588-bec5-48f7-9ef2-231b536cd641",
										"exec": [
											"let utils = eval(globals.loadUtils);\r",
											"\r",
											"utils.getModuleId(\"mod-authtoken\", bodyHandler);\r",
											"\r",
											"var modulesToEnable = [];\r",
											"\r",
											"function bodyHandler(moduleId) {\r",
											"    modulesToEnable.push({\r",
											"        \"id\": moduleId,\r",
											"        \"action\": \"enable\"\r",
											"    });\r",
											"    pm.variables.set(\"modulesToEnable\", JSON.stringify(modulesToEnable));\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a71e35e3-02ff-421e-bead-34a1243442b0",
										"exec": [
											"let utils = eval(globals.loadUtils);",
											"",
											"postman.setNextRequest(null);",
											"pm.test(\"Enabled mod-finance with all dependencies\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.withBody;",
											"    postman.setNextRequest();",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"type": "text",
										"value": "{{xokapitoken-admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{modulesToEnable}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/tenants/{{testTenant}}/install",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"_",
										"proxy",
										"tenants",
										"{{testTenant}}",
										"install"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login by new admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c684703f-504b-4e3d-b4ba-76ea33de0868",
										"exec": [
											"// In case the new user cannot be logged in no sense to run further tests",
											"postman.setNextRequest(null);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    // All is okay so running further requests",
											"    postman.setNextRequest();",
											"});",
											"",
											"pm.environment.set(\"xokapitoken-testAdmin\", postman.getResponseHeader(\"x-okapi-token\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5bcc206b-b67a-4a2f-adb4-06aa445f33cb",
										"exec": [
											"pm.variables.set(\"newUserCreds\", JSON.stringify(globals.testData.users.admin.credentials));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-okapi-tenant",
										"value": "{{testTenant}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{newUserCreds}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/login",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"authn",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c8d3020a-32af-4c44-9451-98136148f6ac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9cb27769-873a-4a08-8030-c5e568af7455",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create regular user",
					"item": [
						{
							"name": "Create user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90906084-e9d0-46c6-a515-196c14a2b780",
										"exec": [
											"pm.variables.set(\"userData\", JSON.stringify(globals.testData.users.regular.user));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9f97649f-8341-42c7-b08f-bdff0190aae7",
										"exec": [
											"// In case the user was not created no sense to run further requests\r",
											"postman.setNextRequest(null);\r",
											"\r",
											"pm.test(\"User created - Expected Created (201)\", () => {\r",
											"    pm.response.to.have.status(201);\r",
											"    // All is okay so running further requests\r",
											"    postman.setNextRequest();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"type": "text",
										"value": "{{xokapitoken-testAdmin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{userData}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/users",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credentials for user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "59b947ff-9e99-4913-8f59-77b72f85ba8d",
										"exec": [
											"pm.test(globals.testData.users.regular.user.username + \" user's credentials created\", () => pm.response.to.have.status(201));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8eb1d7ac-c9b3-4d8c-bfc9-234717dc6d16",
										"exec": [
											"pm.variables.set(\"userCreds\", JSON.stringify(globals.testData.users.regular.credentials));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"value": "{{xokapitoken-testAdmin}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{userCreds}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/credentials",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"authn",
										"credentials"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add data-export.all permissions to user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f25ba3f1-0539-42d4-937a-e7d09e4a6fa5",
										"exec": [
											"pm.test(globals.testData.users.regular.user.username + \" user's permissions created\", () => {\r",
											"    pm.response.to.have.status(201);\r",
											"    pm.environment.set(\"limitedPrivPermId\", pm.response.json().id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fe1a6611-2366-4879-9bc7-8d19bf71f39b",
										"exec": [
											"pm.variables.set(\"userPermissions\", JSON.stringify(globals.testData.users.regular.permissions));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"type": "text",
										"value": "{{xokapitoken-testAdmin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{userPermissions}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/perms/users",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"perms",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login by new user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db8e8276-b963-4fb3-b0e3-34deeab7a42b",
										"exec": [
											"// In case the new user cannot be logged in no sense to run further tests\r",
											"postman.setNextRequest(null);\r",
											"\r",
											"pm.test(\"Status code is 201\", function() {\r",
											"    pm.response.to.have.status(201);\r",
											"    // All is okay so running further requests\r",
											"    postman.setNextRequest();\r",
											"});\r",
											"\r",
											"pm.environment.set(\"xokapitoken\", postman.getResponseHeader(\"x-okapi-token\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b288820f-6b05-4637-b1a4-463a04d615f2",
										"exec": [
											"pm.variables.set(\"newUserCreds\", JSON.stringify(globals.testData.users.regular.credentials));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-okapi-tenant",
										"value": "{{testTenant}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{newUserCreds}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/login",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"authn",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e48c49e3-456e-4efd-8c18-acdeca0cdbf4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8f5e6287-c38a-4add-95b6-a32a11928e13",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Post instance to inventory storage",
					"item": [
						{
							"name": "Create instance type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5c95f63b-be72-47c7-9890-4aaee6302d96",
										"exec": [
											"let utils = eval(globals.loadUtils);\r",
											"pm.sendRequest(pm.variables.get(\"resourcesUrl\") + \"/mockData/test_instance_type_to_post.json\", function(err, res) {\r",
											"    let instance_type_to_put = JSON.stringify(res.json());\r",
											"    pm.variables.set(\"instanceTypeToPut\", instance_type_to_put);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b5f4e1e9-336a-40dc-a648-984ca7437105",
										"exec": [
											"pm.test(\"Instance type created - Expected Created (201)\", () => {\r",
											"    pm.response.to.have.status(201);\r",
											"    // All is okay so running further requests\r",
											"    if (pm.response.code === 201) {\r",
											"    pm.variables.set(\"instanceTypeId\", pm.response.json().id);\r",
											"        postman.setNextRequest();\r",
											"    } else {\r",
											"       // Failed to create instance type;\r",
											"        postman.setNextRequest(null);\r",
											"    }\r});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"type": "text",
										"value": "{{xokapitoken-testAdmin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{instanceTypeToPut}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/instance-types",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"instance-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create instance",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c8f73e74-85dc-412f-b5a6-fd4807d0bb23",
										"exec": [
											"let utils = eval(globals.loadUtils);\r",
											"pm.sendRequest(pm.variables.get(\"resourcesUrl\") + \"/mockData/test_instance_to_post.json\", function(err, res) {\r",
											"    let instance_to_put = JSON.stringify(res.json());\r",
											"    pm.variables.set(\"instanceToPut\", instance_to_put);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5f556d84-f61f-4e22-872b-26a038842c1b",
										"exec": [
											"pm.test(\"Instance created - Expected Created (201)\", () => {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"type": "text",
										"value": "{{xokapitoken-testAdmin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{instanceToPut}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/instance-storage/instances",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"instance-storage",
										"instances"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cf33c2cb-beff-4208-b6d2-7fe2e48eabff",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5ec69f7f-b2c3-4b32-86bf-db81e9e2bbc8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1e63729e-075f-4d7a-8a98-eed9b7b29100",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "306dfbde-814e-43ed-8291-750b557badca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Main tests",
			"item": [
				{
					"name": "Profiles",
					"item": [
						{
							"name": "Post mappingProfile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6a1e48c2-3eb3-406c-b93b-d39949636e67",
										"exec": [
											"",
											"pm.test(\"Mapping profile has been created\", () => {",
											"    pm.response.to.have.status(201);",
											"    pm.response.to.be.withBody;",
											"});",
											"",
											"",
											"let mappingProfile = pm.response.json();",
											"",
											"pm.test(\"With id\", () => {",
											"    pm.expect(mappingProfile.id).not.equal(null);",
											"});",
											"",
											"pm.test(\"With name\", () => {",
											"    pm.expect(mappingProfile.name).not.equal(null);",
											"});",
											"",
											"pm.test(\"With recordTypes and it equal to instance\", () => {",
											"    pm.expect(mappingProfile.recordTypes[0]).equal(\"INSTANCE\");",
											"});",
											"",
											"pm.test(\"With transformations\", () => {",
											"    pm.expect(mappingProfile.transformations).not.equal(null);",
											"});",
											"",
											"pm.variables.set(\"mappingProfile\", mappingProfile);",
											"pm.environment.set(\"mappingProfileId\", mappingProfile.id);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "670ba0de-3dbd-4910-8f5b-dfab555de6b3",
										"exec": [
											"pm.variables.set(\"mappingProfile\", JSON.stringify(globals.testData.mappingProfile));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"value": "{{xokapitoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{mappingProfile}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/mappingProfiles",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"data-export",
										"mappingProfiles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update mappingProfile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28049cbc-0c64-45e2-982d-d3531c7b7b2c",
										"exec": [
											"",
											"pm.test(\"Mapping profile has been updated\", () => {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bcae6043-72a5-4b21-9a02-81b5d5434796",
										"exec": [
											"let mappingProfile = pm.variables.get(\"mappingProfile\");",
											"mappingProfile.recordTypes[0] = \"HOLDINGS\";",
											"pm.variables.set(\"updatedMappingProfile\",  JSON.stringify(mappingProfile));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"value": "{{xokapitoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{updatedMappingProfile}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/mappingProfiles/{{mappingProfileId}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"data-export",
										"mappingProfiles",
										"{{mappingProfileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get mapping profile by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "00c1a86b-5c98-4ef1-8257-84184bf618be",
										"exec": [
											"pm.test(\"The mapping profile by id has been retrieved successfully\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.withBody;\r",
											"});\r",
											"\r",
											"let mappingProfile = pm.response.json();\r",
											"\r",
											"pm.test(\"With updated recordTypes and it equals to HOLDINGS\", () => {\r",
											"    pm.expect(mappingProfile.recordTypes[0]).equal(\"HOLDINGS\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5355658c-c645-4289-a56e-788d4c38778c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"type": "text",
										"value": "{{xokapitoken}}"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/mappingProfiles/{{mappingProfileId}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"data-export",
										"mappingProfiles",
										"{{mappingProfileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get mapping profile by query",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb3d6859-5da1-4587-8c27-8bfa4349c419",
										"exec": [
											"pm.test(\"The Mapping profiles by query has been retrieved successfully\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.withBody;\r",
											"});\r",
											"\r",
											"let mappingProfileId = pm.variables.get(\"mappingProfileId\");\r",
											"let mappingProfile = pm.response.json().mappingProfiles.find(profile => profile.id === mappingProfileId);\r",
											"let totalRecords = pm.response.json().totalRecords;\r",
											"\r",
											"pm.test(\"With total records equals to  1\", () => {\r",
											"    pm.expect(totalRecords).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"With correct id\", () => {\r",
											"    pm.expect(mappingProfile.id).equal(mappingProfileId);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "95cd177b-82f2-4026-a731-836246285092",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-okapi-token",
										"type": "text",
										"value": "{{xokapitoken}}"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/mappingProfiles?query=id=={{mappingProfileId}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"data-export",
										"mappingProfiles"
									],
									"query": [
										{
											"key": "query",
											"value": "id=={{mappingProfileId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get default mapping profile by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7c6b060-01d7-44b2-bf40-c0c95674d232",
										"exec": [
											"pm.test(\"The default mapping profile by id has been retrieved successfully\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.withBody;\r",
											"});\r",
											"\r",
											"let mappingProfile = pm.response.json();\r",
											"\r",
											"pm.test(\"With default record type\", () => {\r",
											"    pm.expect(mappingProfile.recordTypes[0]).equal(\"INSTANCE\");\r",
											"});\r",
											"\r",
											"pm.test(\"With default name\", () => {\r",
											"    pm.expect(mappingProfile.name).equal(\"Default instance mapping profile\");\r",
											"});\r",
											"\r",
											"pm.test(\"With default description\", () => {\r",
											"    pm.expect(mappingProfile.description).equal(\"Default mapping profile for the inventory instance record\");\r",
											"});\r",
											"\r",
											"pm.test(\"With default output format\", () => {\r",
											"    pm.expect(mappingProfile.outputFormat).equal(\"MARC\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c645c64d-accc-4eb4-803a-d043b6d99231",
										"exec": [
											"pm.environment.set(\"defaultMappingProfile\", globals.testData.defaultMappingProfileId);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"type": "text",
										"value": "{{xokapitoken}}"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/mappingProfiles/{{defaultMappingProfile}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"data-export",
										"mappingProfiles",
										"{{defaultMappingProfile}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post jobProfiles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5563452-0e05-4b7b-82aa-52b8239985bd",
										"exec": [
											"",
											"pm.test(\"Job profile has been created\", () => {",
											"    pm.response.to.have.status(201);",
											"    pm.response.to.be.withBody;",
											"});",
											"",
											"let jobProfile = pm.response.json();",
											"",
											"pm.test(\"Verify id exists\", () => {",
											"    pm.expect(jobProfile.id).not.equal(null);",
											"});",
											"",
											"pm.test(\"Verify name exists\", () => {",
											"    pm.expect(jobProfile.name).not.equal(null);",
											"});",
											"",
											"",
											"pm.variables.set(\"jobProfile\", jobProfile);",
											"pm.environment.set(\"jobProfileId\", jobProfile.id);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "601aa62f-aabe-497e-a53b-2c63a49dd67b",
										"exec": [
											"let utils = eval(globals.loadUtils);",
											"",
											"var mappingProfileId = pm.variables.get(\"mappingProfile\").id;",
											"pm.variables.set(\"jobProfile\", JSON.stringify(utils.buildJobProfile(mappingProfileId)));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"value": "{{xokapitoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{jobProfile}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/jobProfiles",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"data-export",
										"jobProfiles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update jobProfile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ce8922df-3e76-44a9-9a16-801559828e96",
										"exec": [
											"pm.test(\"Job profile has been updated\", () => {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e434753-ef72-4c57-990a-d828e14085d0",
										"exec": [
											"let jobProfile = pm.variables.get(\"jobProfile\");",
											"jobProfile.description = \"updated API Test job Profile Description\";",
											"pm.variables.set(\"jobProfile\",  JSON.stringify(jobProfile));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"value": "{{xokapitoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{jobProfile}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/jobProfiles/{{jobProfileId}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"data-export",
										"jobProfiles",
										"{{jobProfileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get job profile by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b15deb52-0b5c-4bc3-809f-296f637a3abe",
										"exec": [
											"pm.test(\"The job profile by id has been retrieved successfully\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.withBody;\r",
											"});\r",
											"\r",
											"let jobProfile = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Description has been updated\", () => {\r",
											"    pm.expect(jobProfile.description).equal(\"updated API Test job Profile Description\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "03aa3d86-9499-43b4-b06e-ed119a210e0d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"type": "text",
										"value": "{{xokapitoken}}"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/jobProfiles/{{jobProfileId}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"data-export",
										"jobProfiles",
										"{{jobProfileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get default job profile by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7105aa59-1d38-4a17-811a-fedd8a3d64ed",
										"exec": [
											"pm.test(\"The default job profile by id has been retrieved successfully\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.withBody;\r",
											"});\r",
											"\r",
											"let jobProfile = pm.response.json();\r",
											"\r",
											"pm.test(\"With default name\", () => {\r",
											"    pm.expect(jobProfile.name).equal(\"Default job profile\");\r",
											"});\r",
											"\r",
											"pm.test(\"With default description\", () => {\r",
											"    pm.expect(jobProfile.description).equal(\"Default job profile\");\r",
											"});\r",
											"\r",
											"pm.test(\"With default mappingProfile\", () => {\r",
											"    pm.expect(jobProfile.mappingProfileId).equal(globals.testData.defaultMappingProfileId);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "70870019-0d0b-482a-9234-c6d3b022b899",
										"exec": [
											"pm.environment.set(\"defaultJobProfileId\", globals.testData.defaultJobProfileId);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"type": "text",
										"value": "{{xokapitoken}}"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/jobProfiles/{{defaultJobProfileId}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"data-export",
										"jobProfiles",
										"{{defaultJobProfileId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Post file definition with invalid filename extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac4c68fc-ffb4-4b80-9a49-5189955ab673",
								"type": "text/javascript",
								"exec": [
									"let fileName = JSON.stringify(globals.testData.fileDefinitions.invalidFileDefinition.fileName);",
									"pm.test(\"File difinition with fileName \\\"\"+fileName+\"\\\" has been created\", () => {",
									"    pm.response.to.have.status(422);",
									"    pm.response.to.be.withBody;",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3d99ddde-fb10-436a-adc1-d8b944165df5",
								"type": "text/javascript",
								"exec": [
									"pm.variables.set(\"fileDefinition\", JSON.stringify(globals.testData.fileDefinitions.invalidFileDefinition));"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{fileDefinition}}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/fileDefinitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"data-export",
								"fileDefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post file definition",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c8b4dcd-6589-4143-a82f-0e129349150b",
								"type": "text/javascript",
								"exec": [
									"let fileName = JSON.stringify(globals.testData.fileDefinitions.validFileDefinition.fileName);",
									"pm.test(\"File difinition with fileName \\\"\"+fileName+\"\\\" has been created\", () => {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.be.withBody;",
									"});",
									"",
									"let fileDefinition = pm.response.json();",
									"pm.globals.set(\"fileDefinitionId\", fileDefinition.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a13e4b7a-ac04-4c42-a740-c602125d680c",
								"type": "text/javascript",
								"exec": [
									"pm.variables.set(\"fileDefinition\", JSON.stringify(globals.testData.fileDefinitions.validFileDefinition));"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{fileDefinition}}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/fileDefinitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"data-export",
								"fileDefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get file definition by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed398b45-152f-48a4-bb39-4539e959a170",
								"type": "text/javascript",
								"exec": [
									"let fileName = JSON.stringify(globals.testData.fileDefinitions.validFileDefinition.fileName);",
									"pm.test(\"File definition with fileName \"+fileName+ \" has been retrieved successfully\", () => {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.withBody;",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e25ae99d-d4ac-4b1c-8386-03aeeba028f0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/fileDefinitions/{{fileDefinitionId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"data-export",
								"fileDefinitions",
								"{{fileDefinitionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post uploading a file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b21f82fd-da64-4482-886f-dbcdb0721194",
								"type": "text/javascript",
								"exec": [
									"let fileName = JSON.stringify(globals.testData.fileDefinitions.validFileDefinition.fileName);",
									"pm.test(\"File has been uplouaded sucessfully\", () => {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.withBody;",
									"});",
									"",
									"let fileDefinition = pm.response.json();",
									"",
									"pm.test(\"Directory for uploaded file has been created & source path not empty\", () => {",
									"    pm.expect(fileDefinition.sourcePath).not.equal(null);",
									"})",
									"",
									"pm.test(\"Status has completed value\", () => {",
									"    pm.expect(fileDefinition.status).equal(\"COMPLETED\");",
									"})",
									"",
									"pm.test(\"With metadata\", () => {",
									"    pm.expect(fileDefinition.metadata).not.equal(null);",
									"})",
									"",
									"pm.variables.set(\"jobExecutionId\", fileDefinition.jobExecutionId);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "715fb069-2f1d-487d-9d3a-18ecf03df9dd",
								"type": "text/javascript",
								"exec": [
									"let utils = eval(globals.loadUtils);\r",
									"pm.sendRequest(pm.variables.get(\"resourcesUrl\") + \"/mockData/test_file_to_upload.csv\", function(err, res) {\r",
									"    let arr = new Uint8Array(res.stream);\r",
									"    let test_file_to_upload = String.fromCharCode.apply(String, arr);\n\r",
									"    pm.variables.set(\"fileToUpload\", test_file_to_upload);\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/octet-stream"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							},
							{
								"key": "Content-Disposition",
								"value": "attachment"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{fileToUpload}}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/fileDefinitions/{{fileDefinitionId}}/upload",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"data-export",
								"fileDefinitions",
								"{{fileDefinitionId}}",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post uploading a file - Idempotent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5da2d9e1-799c-4976-9255-431171cf0958",
								"exec": [
									"pm.test(\"File is already uploaded\", () => {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.be.withBody;",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b7c465d5-5682-4dec-804f-d32e747a3727",
								"exec": [
									"let utils = eval(globals.loadUtils);\r",
									"pm.sendRequest(pm.variables.get(\"resourcesUrl\") + \"/mockData/test_file_to_upload.csv\", function(err, res) {\r",
									"    let test_file_to_upload = res.body;\r",
									"    pm.variables.set(\"fileToUpload\", test_file_to_upload);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/octet-stream"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}"
							},
							{
								"key": "Content-Disposition",
								"value": "attachment"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{fileToUpload}}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/fileDefinitions/{{fileDefinitionId}}/upload",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"data-export",
								"fileDefinitions",
								"{{fileDefinitionId}}",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export uploaded file with invalid job profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99cd0362-edfd-4926-9fa7-839e05547aec",
								"exec": [
									"pm.test(\"Export of uploaded file failed with 400 status code\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4bfd989f-585e-43c8-8e29-636f48bb06b9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-okapi-token",
								"type": "text",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileDefinitionId\": \"{{fileDefinitionId}}\",\n  \"jobProfileId\": \"da0ccaa8-6f59-11ea-bc55-0242ac130003\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/export",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"data-export",
								"export"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export uploaded file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99cd0362-edfd-4926-9fa7-839e05547aec",
								"exec": [
									"pm.test(\"Export of uploaded file completed successfully\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"    // The export process has begun. Wait 10 seconds for it to complete.\r",
									"    setTimeout(() => postman.setNextRequest(), 10000);\r",
									"});\r"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4bfd989f-585e-43c8-8e29-636f48bb06b9",
								"exec": [
									"console.log(\"{{jobProfileId}}\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-okapi-token",
								"type": "text",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileDefinitionId\": \"{{fileDefinitionId}}\",\n  \"jobProfileId\": \"{{jobProfileId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/export",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"data-export",
								"export"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get job execution",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb9748a5-bc96-40d5-9e13-f1bd65c98b65",
								"exec": [
									"pm.test(\"Job execution has been retrieved successfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;",
									"});\r",
									"",
									"let jobExecution = pm.response.json().jobExecutions.find(job => job.id === pm.variables.get(\"jobExecutionId\"));",
									"",
									"pm.test(\"The status is success\", () => {",
									"    pm.expect(jobExecution.status).equal(\"SUCCESS\");",
									"});\r",
									"",
									"pm.test(\"File name contains hrId\", () => {",
									"pm.expect(jobExecution.exportedFiles[0].fileName).include(jobExecution.hrId);",
									"});\r",
									"",
									"pm.test(\"With runBy object\", () => {",
									"pm.expect(jobExecution.runBy).not.equal(null);",
									"});\r",
									"",
									"pm.test(\"With progress\", () => {",
									"pm.expect(jobExecution.progress).not.equal(null);",
									"});\r"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0442f22c-c493-4788-8619-c08a922bb321",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-okapi-token",
								"type": "text",
								"value": "{{xokapitoken}}"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/jobExecutions?query=id={{jobExecutionId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"data-export",
								"jobExecutions"
							],
							"query": [
								{
									"key": "query",
									"value": "id={{jobExecutionId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "055bbefc-23b3-451f-b286-e90aabbb5135",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "622bb001-6874-43a2-a45d-937b9dcd3abd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cleanup",
			"item": [
				{
					"name": "Profiles",
					"item": [
						{
							"name": "Delete jobProfile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b19b72e-454c-41f1-a639-c1a62cbbb2e0",
										"exec": [
											"pm.test(\"Job profile has been deleted\", () => {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "21bbb6d7-ed45-4e08-8437-0d678094975b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"value": "{{xokapitoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/jobProfiles/{{jobProfileId}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"data-export",
										"jobProfiles",
										"{{jobProfileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete mappingProfile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a2bee574-9156-476e-a233-02c516e5c83f",
										"exec": [
											"",
											"pm.test(\"Mapping profile has been deleted\", () => {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6d46ff6e-539e-49a0-bc34-7afde1c66189",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-okapi-token",
										"value": "{{xokapitoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/data-export/mappingProfiles/{{mappingProfileId}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"data-export",
										"mappingProfiles",
										"{{mappingProfileId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "clean tenant and modules data",
					"item": [
						{
							"name": "Purge and disable all module for created tenant",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c9dfc20b-cc63-45b5-84cd-ccfd3409811a",
										"exec": [
											"let utils = eval(globals.loadUtils);\r",
											"pm.sendRequest(utils.buildOkapiURL(\"/_/proxy/tenants/\" + pm.variables.get(\"testTenant\") + \"/modules\"), (err, res) => {\r",
											"    pm.test(\"Preparing request to disable modules\", () => {\r",
											"        pm.expect(err).to.equal(null);\r",
											"        pm.expect(res.code).to.equal(200);\r",
											"        let modulesToDisable = res.json();\r",
											"        modulesToDisable.forEach(entry => entry.action = \"disable\");\r",
											"\r",
											"        console.log(modulesToDisable);\r",
											"        pm.variables.set(\"modulesToDisable\", JSON.stringify(modulesToDisable));\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5e11acb2-1f7e-4054-8350-e12557c079b3",
										"exec": [
											"let utils = eval(globals.loadUtils);\r",
											"\r",
											"pm.test(\"Disable all modules for test tenant\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.withBody;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Okapi-Token",
										"value": "{{xokapitoken-admin}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{modulesToDisable}}"
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/tenants/{{testTenant}}/install?purge=true",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"_",
										"proxy",
										"tenants",
										"{{testTenant}}",
										"install"
									],
									"query": [
										{
											"key": "purge",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete test tenant",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b6761606-f19e-48ed-b3e8-b312de4cd4c5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d2ec44f3-937e-4e7f-866a-f93ad7aed4b1",
										"exec": [
											"pm.test(\"Tenant deleted - Expected Created (204)\", () => {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"// Remove all created variables\r",
											"eval(globals.loadUtils).unsetTestVariables();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-okapi-token",
										"value": "{{xokapitoken-admin}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{url}}:{{okapiport}}/_/proxy/tenants/{{testTenant}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{url}}"
									],
									"port": "{{okapiport}}",
									"path": [
										"_",
										"proxy",
										"tenants",
										"{{testTenant}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5538deb3-c6b8-46cc-8ef6-d5313d6a2a35",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5b7900db-dc32-485a-b0f3-d41fe5d6b5c6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "18443c2b-780f-4d9c-8fda-0bf077e47df8",
				"type": "text/javascript",
				"exec": [
					"let testData = {",
					"    // User template with hardcoded id",
					"    users: {",
					"        admin: {",
					"            user: {",
					"                \"id\": \"00000000-1111-5555-9999-999999999999\",",
					"                \"username\": \"mdexp-admin-user\",",
					"                \"active\": true,",
					"                \"personal\": {",
					"                    \"firstName\": \"Test\",",
					"                    \"lastName\": \"Api\"",
					"                }",
					"            },",
					"            credentials: {",
					"                \"username\": \"mdexp-admin-user\",",
					"                \"password\": \"mdexp-admin-password\"",
					"            },",
					"            permissions: {",
					"                \"userId\": \"00000000-1111-5555-9999-999999999999\",",
					"                \"permissions\": []",
					"            }",
					"        },",
					"        regular: {",
					"            user: {",
					"                \"id\": \"00000001-1111-5555-9999-999999999999\",",
					"                \"username\": \"mdexp-user\",",
					"                \"active\": true,",
					"                \"personal\": {",
					"                    \"firstName\": \"Regular\",",
					"                    \"lastName\": \"API Tests\"",
					"                }",
					"            },",
					"            credentials: {",
					"                \"username\": \"mdexp-user\",",
					"                \"password\": \"mdexp-password\"",
					"            },",
					"            permissions: {",
					"                \"userId\": \"00000001-1111-5555-9999-999999999999\",",
					"                \"permissions\": [",
					"                    \"data-export.export.post\",",
					"                    \"data-export.file-definitions.item.get\",",
					"                    \"data-export.file-definitions.item.post\",",
					"                    \"data-export.file-definitions.upload.post\",",
					"                    \"data-export.job-executions.items.get\",",
					"                    \"data-export.mapping-profiles.item.post\",",
					"                    \"data-export.mapping-profiles.collection.get\",",
					"                    \"data-export.mapping-profiles.item.get\",",
					"                    \"data-export.mapping-profiles.item.put\",",
					"                    \"data-export.mapping-profiles.item.delete\",",
					"                    \"data-export.job-profiles.item.post\",",
					"                    \"data-export.job-profiles.collection.get\",",
					"                    \"data-export.job-profiles.item.get\",",
					"                    \"data-export.job-profiles.item.put\",",
					"                    \"data-export.job-profiles.item.delete\"",
					"                ]",
					"            }",
					"        },",
					"    },",
					"    tenant: {",
					"        \"id\": pm.variables.get(\"testTenant\"),",
					"        \"name\": \"Test mod-data-export tenant\",",
					"        \"description\": \"Tenant for test purpose\"",
					"    },",
					"    fileDefinitions: {",
					"        validFileDefinition: {",
					"            \"fileName\": \"test_file.csv\"",
					"        },",
					"        invalidFileDefinition: {",
					"            \"fileName\": \"test_file.txt\"",
					"        }",
					"    },",
					"    mappingProfile: {",
					"        \"id\": \"3798f546-7afb-11ea-bc55-0242ac130003\",",
					"        \"name\": \"Mapping profile\",",
					"        \"description\": \"Mapping profile description\",",
					"        \"recordTypes\": [",
					"            \"INSTANCE\"",
					"        ],",
					"        \"outputFormat\": \"MARC\",",
					"        \"transformations\": [",
					"            {",
					"                \"fieldId\": \"electronicAccess.linkText\",",
					"                \"path\": \"$.electronicAccess[*].linkText\",",
					"                \"transformation\": \"001\",",
					"                \"enabled\": \"true\",",
					"                \"recordType\": \"INSTANCE\"",
					"            }",
					"        ],",
					"        \"userInfo\": {",
					"            \"firstName\": \"User\",",
					"            \"lastName\": \"User\",",
					"            \"userName\": \"@username\"",
					"        },",
					"        \"metadata\": {",
					"            \"createdDate\": \"2019-07-22T11:22:07Z\",",
					"            \"createdByUserId\": \"dee12548-9cee-45fa-bbae-675c1cc0ce3b\",",
					"            \"createdByUsername\": \"janedoeuser\",",
					"            \"updatedDate\": \"2019-07-27T13:28:54Z\",",
					"            \"updatedByUserId\": \"dee12548-9cee-45fa-bbae-675c1cc0ce3b\",",
					"            \"updatedByUsername\": \"\"",
					"        }",
					"    },",
					"    defaultMappingProfileId: \"25d81cbe-9686-11ea-bb37-0242ac130002\",",
					"    defaultJobProfileId: \"6f7f3cd7-9f24-42eb-ae91-91af1cd54d0a\"",
					"};",
					"",
					"// Global testing object - used in further tests",
					"pm.globals.set(\"testData\", testData);",
					"",
					"postman.setGlobalVariable(\"loadUtils\", function loadUtils() {",
					"    let utils = {};",
					"",
					"    utils.buildOkapiURL = function (path) {",
					"        return pm.environment.get(\"protocol\") + \"://\" + pm.environment.get(\"url\") + \":\" + pm.environment.get(\"okapiport\") + path;",
					"    };",
					"",
					"    utils.getModuleId = function (moduleName, bodyHandler) {",
					"        pm.sendRequest({",
					"            url: utils.buildOkapiURL(\"/_/proxy/modules?latest=1&filter=\" + moduleName),",
					"            method: \"GET\",",
					"            header: {",
					"                \"X-Okapi-Token\": pm.environment.get(\"xokapitoken-admin\")",
					"            }",
					"        }, (err, res) => {",
					"            pm.test(moduleName + \" module is available\", () => {",
					"                pm.expect(err).to.equal(null);",
					"                pm.expect(res.code).to.equal(200);",
					"                bodyHandler(res.json()[0].id);",
					"            });",
					"        });",
					"    };",
					"",
					"    /**",
					"    * Build Job Profile with mappingProfileId.",
					"    */",
					"    utils.buildJobProfile = function (mappingProfileId) {",
					"        return {",
					"            \"name\": \"APITest-JobProfile\",",
					"            \"destination\": \"fileSystem\",",
					"            \"description\": \"Job profile for API tests\",",
					"            \"mappingProfileId\": mappingProfileId",
					"        };",
					"    };",
					"",
					"    /**",
					"     * Clean up variables",
					"     */",
					"    utils.unsetTestVariables = function () {",
					"        pm.globals.unset(\"loadUtils\");",
					"        pm.globals.unset(\"testData\");",
					"        pm.globals.unset(\"fileDefinitionId\");",
					"        pm.environment.unset(\"jobProfileId\");",
					"        pm.environment.unset(\"mappingProfileId\");",
					"        pm.environment.unset(\"xokapitoken\");",
					"        pm.environment.unset(\"xokapitoken-admin\");",
					"        pm.environment.unset(\"xokapitoken-testAdmin\");",
					"    };",
					"    return utils;",
					"} + '; loadUtils();');"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a1e32250-5217-4877-9a8f-099d05a0cd5f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "b3a7fe37-6017-4649-ab13-a7c91dd469bd",
			"key": "testTenant",
			"value": "mdexp_test_tenant",
			"type": "string"
		},
		{
			"id": "06e969f5-b4d4-4b7a-9d11-220036990fa7",
			"key": "xokapitenant",
			"value": "diku",
			"type": "string"
		},
		{
			"id": "0f5b2985-6f67-4461-9eee-c8ac88b08ef6",
			"key": "protocol",
			"value": "http",
			"type": "string"
		},
		{
			"id": "7e16f4f6-9b99-4231-986a-dfc9c63a9d92",
			"key": "url",
			"value": "localhost",
			"type": "string"
		},
		{
			"id": "186a3353-a942-4ab0-966a-9d96bb0ba8eb",
			"key": "okapiport",
			"value": "9130",
			"type": "string"
		},
		{
			"id": "3b02e8df-3765-47c1-a1de-ab62490b70ca",
			"key": "resourcesUrl",
			"value": "https://raw.githubusercontent.com/folio-org/mod-data-export/master/src/test/resources",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}
